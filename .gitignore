    public List<ContactList> getAllcontacts(string[] mobilenumberCollection, string deviceUID,string[] NameCollection)
            {
            try
                {
                List<FriendsContactList> FriendContact = new List<FriendsContactList>();

                List<string> mobileNumbers = new List<string>();
                List<string> ContactName = new List<string>();
                if (deviceUID != null)
                    {
                    var existdevice = dbContext.DeviceInformation.FirstOrDefault(u => u.deviceUUID == deviceUID);
                    if (existdevice != null)
                        {
                        var existuser = dbContext.UserTable.FirstOrDefault(u => u.deviceID == existdevice.deviceId);
                        if (existuser.userId != 0 && existuser.IsActive == true && mobilenumberCollection != null)
                            {
                            foreach (var item in mobilenumberCollection)
                                {                                 
                                var countrycode = existuser.countryCode;
                                var mobile = Convert.ToString(item);
                                if (string.IsNullOrEmpty(mobile))
                                    continue;
                                mobile = Regex.Replace(mobile, @"\s", "");
                                mobile = mobile.Replace("-", "");
                                mobile = mobile.Replace("(", "");
                                mobile = mobile.Replace(")", "");
                                mobile = mobile.Replace(" ", "");
                                mobile = mobile.Replace(" ", "");
                                mobile.Trim();
                                var regexItem = new Regex("^[a-zA-Z0-9 ]*$");
                                int len = mobile.Length;
                                string mob = mobile.Substring(0, 1);
                                if (len>=8)
                                    {
                                    if (mob != "0")
                                        {
                                        if (mob != "+")
                                            {
                                            if (len <= 10 && len >= 8)
                                                {
                                                mobile = countrycode + mobile;

                                                }
                                            else if (len > 10 && regexItem.IsMatch(mobile))
                                                {
                                                mobile = "+" + mobile;
                                                mobile.Trim();
                                                }
                                            }
                                        }
                                    else
                                        {

                                        mobile = countrycode + mobile.TrimStart('0');

                                        }
                                    mobileNumbers.Add(mobile);
                                    }
                                }
                            foreach (var contactName in NameCollection)
                                {
                                ContactName.Add(contactName);
                                }
                            var existUserContact = dbContext.UserTable.Where(m => mobileNumbers.Contains(m.mobileNumber)).Distinct().ToList();
                            var numbersThatNotExistsInDB = mobileNumbers.Where(n => !existUserContact.Any(a => a.mobileNumber == n)).ToList();


                            if (existUserContact != null)
                                {

                                foreach (var MobileNumberExsitDB in existUserContact)                                  
                                   {
                                    var existFriendUserID = dbContext.ListenerTable.Where(u => u.userId == existuser.userId && u.friendsId == MobileNumberExsitDB.userId).FirstOrDefault();
                                    if (existFriendUserID != null)
                                        {
                                        existFriendUserID.userId = existuser.userId;
                                        existFriendUserID.friendsId = MobileNumberExsitDB.userId;
                                        existFriendUserID.PublicListening = existFriendUserID.PublicListening;
                                        existFriendUserID.MyContactsListening = existFriendUserID.MyContactsListening;
                                        dbContext.SaveChanges();
                                        }
                                    else
                                        {
                                        ListenerTable Listen = new ListenerTable();
                                        Listen.userId = existuser.userId;
                                        Listen.friendsId = MobileNumberExsitDB.userId;
                                        Listen.PublicListening = true;
                                        Listen.MyContactsListening = true;
                                        dbContext.ListenerTable.Add(Listen);
                                        dbContext.SaveChanges();

                                        }

                                    var userstatusvoice = dbContext.VoiceTable.Where(n => n.userID == MobileNumberExsitDB.userId).OrderByDescending(x => x.CreatedAt).FirstOrDefault();
                                    var listnertrue = dbContext.ListenerTable.Where(e => e.userId == existuser.userId && e.friendsId == MobileNumberExsitDB.userId).FirstOrDefault();
                                    FriendsContactList contactList = new FriendsContactList();
                                    if (existuser.userId!=MobileNumberExsitDB.userId)
                                        {
                                    if (userstatusvoice != null)
                                        {
                                        if (userstatusvoice.IsStatusChecked == true)
                                            {
                                            contactList.userId = MobileNumberExsitDB.userId;
                                            contactList.voiceID = userstatusvoice.VoiceID;
                                            contactList.userName = MobileNumberExsitDB.userName;
                                            contactList.userProfileImageBase64 = MobileNumberExsitDB.userImageBase64;
                                            contactList.userProfileImagetype = MobileNumberExsitDB.userImagetype;
                                            contactList.userStatusVoiceUrl = userstatusvoice.VoiceBase64;
                                            contactList.userStatusVoiceType = userstatusvoice.VoiceFileType;
                                            contactList.voiceFileName = userstatusvoice.VoiceFileName;
                                            contactList.StatusVoiceCreatedAt = Convert.ToDateTime(userstatusvoice.CreatedAt).ToString("d MMM, yyyy");
                                            contactList.EmojiImage = userstatusvoice.emojiImage;
                                            FriendContact.Add(contactList);
                                            }
                                        else
                                            {
                                            contactList.userId = MobileNumberExsitDB.userId;
                                            contactList.userName = MobileNumberExsitDB.userName;
                                            contactList.userProfileImageBase64 = MobileNumberExsitDB.userImageBase64;
                                            contactList.userProfileImagetype = MobileNumberExsitDB.userImagetype;
                                            if (listnertrue != null)
                                                {
                                                contactList.listening = listnertrue.PublicListening;
                                                }
                                            FriendContact.Add(contactList);
                                            }

                                        }
                                    else
                                        {
                                        contactList.userId = MobileNumberExsitDB.userId;
                                        contactList.userName = MobileNumberExsitDB.userName;
                                        contactList.userProfileImageBase64 = MobileNumberExsitDB.userImageBase64;
                                        contactList.userProfileImagetype = MobileNumberExsitDB.userImagetype;
                                        if (listnertrue != null)
                                            {
                                            contactList.listening = listnertrue.PublicListening;
                                            }
                                        FriendContact.Add(contactList);
                                        }
                                    }
                                    }
                                }
                            if (numbersThatNotExistsInDB != null)
                                {

                                foreach (var NotExistnumber in numbersThatNotExistsInDB)
                                    {
                                    foreach (var NotExist in ContactName)
                                        {
                                    FriendsContactList phonenumber = new FriendsContactList();
                                    phonenumber.mobileNumber = NotExistnumber;
                                    phonenumber.userName = NotExist;
                                    phonenumber.listening = false;
                                    FriendContact.Add(phonenumber);
                                    }
                                }
                                }
                            }
                      
                        }
                    }
                return FriendContact;
                }
            catch (Exception)
                {
                throw new Exception("Server Busy! Please try after some time. 309");
                }
            }
